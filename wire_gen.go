// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/webook-project-go/webook-active/grpc"
	"github.com/webook-project-go/webook-active/ioc"
	"github.com/webook-project-go/webook-active/repository/redis"
	"github.com/webook-project-go/webook-active/service"
)

import (
	_ "github.com/webook-project-go/webook-active/config"
)

// Injectors from wire.go:

func InitApp() *App {
	client := ioc.InitEtcd()
	grpcxServer := ioc.InitGrpcServer(client)
	cmdable := ioc.InitRedis()
	logger := ioc.InitLogger()
	redisClient := redis.New(cmdable, logger)
	serviceService := service.New(redisClient)
	grpcService := grpc.New(serviceService)
	saramaClient := ioc.InitKafka()
	v := ioc.InitConsumer(saramaClient, logger, serviceService)
	app := &App{
		Server:    grpcxServer,
		Service:   grpcService,
		Consumers: v,
	}
	return app
}

// wire.go:

var activeServiceProvider = wire.NewSet(service.New, redis.New)

var thirdPartyProvider = wire.NewSet(ioc.InitRedis, ioc.InitKafka, ioc.InitLogger, ioc.InitEtcd)
